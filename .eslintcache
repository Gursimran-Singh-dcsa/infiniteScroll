[{"/home/gursimran/infinitescroll/src/reportWebVitals.js":"1","/home/gursimran/infinitescroll/src/Components/AddImages.js":"2","/home/gursimran/infinitescroll/src/index.js":"3","/home/gursimran/infinitescroll/src/Components/Homepage.js":"4","/home/gursimran/infinitescroll/src/Components/NavBar.js":"5","/home/gursimran/infinitescroll/src/Reducer/state.js":"6","/home/gursimran/infinitescroll/src/Functions/common.js":"7","/home/gursimran/infinitescroll/src/Components/loginTemplate.js":"8"},{"size":362,"mtime":1606311806644,"results":"9","hashOfConfig":"10"},{"size":123,"mtime":1606584469048,"results":"11","hashOfConfig":"10"},{"size":742,"mtime":1607447788094,"results":"12","hashOfConfig":"10"},{"size":710,"mtime":1607705170276,"results":"13","hashOfConfig":"10"},{"size":539,"mtime":1607447991127,"results":"14","hashOfConfig":"10"},{"size":368,"mtime":1607450005785,"results":"15","hashOfConfig":"10"},{"size":66,"mtime":1607448227144,"results":"16","hashOfConfig":"10"},{"size":4170,"mtime":1608052002249,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yxw348",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/home/gursimran/infinitescroll/src/reportWebVitals.js",[],"/home/gursimran/infinitescroll/src/Components/AddImages.js",[],"/home/gursimran/infinitescroll/src/index.js",[],["36","37"],"/home/gursimran/infinitescroll/src/Components/Homepage.js",[],"/home/gursimran/infinitescroll/src/Components/NavBar.js",[],"/home/gursimran/infinitescroll/src/Reducer/state.js",[],"/home/gursimran/infinitescroll/src/Functions/common.js",[],"/home/gursimran/infinitescroll/src/Components/loginTemplate.js",["38"],"import {useDispatch} from 'react-redux';\nimport {useState} from 'react';\n\nconst LoginTemplate = () => {\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    dob: '',\n    image: '',\n    accepted: false,\n  });\n\n  const [errors, setError] = useState({\n    name: false,\n    email: false,\n    dob: false,\n    image: false,\n    accepted: false\n  })\n  var today = new Date();\n  var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n  const userInputFields = [\n    {\n      \"name\": \"name\",\n      \"type\": \"text\",\n      \"placeHolder\": \"please enter your name\"\n    },\n    {\n      \"name\": \"email\",\n      \"type\": \"email\",\n      \"placeHolder\": \"please enter your email\"\n    },\n    {\n      \"name\": \"dob\",\n      \"type\": \"date\",\n      \"placeHolder\": \"please enter your dae of birth\",\n      \"min\": \"1900-01-01\",\n      \"max\": date\n    },\n    // {\n    //   \"name\": \"name\",\n    //   \"type\": \"text\"\n    // },\n    {\n      \"name\": \"accepted\",\n      \"type\": \"checkbox\",\n      \"placeHolder\": \"I agree terms and conditions\"\n    }\n  ];\n  const dispatch = useDispatch();\n\n  const setUserState = (e) => {\n    const type = e.target.name;\n    const value = (e.target.value).trim();\n    const isValid = validate({type: type, value: value})\n    setError({...errors, [e.target.name]: isValid})\n    switch (e.target.name) {\n      case 'name':\n      case 'email':\n      case 'dob':\n        setUserData({...userData, [e.target.name]: e.target.value})\n        break;\n      default:\n        break;\n    }\n  }\n  const validate = ({type, value}) => {\n    switch (type) {\n      case 'dob':\n        const inputDate = new Date(value);\n        const minDate = new Date('01-01-1900');\n        return (inputDate > today || inputDate < minDate)\n      case 'name':\n        if (null == value || !(/^[A-Za-z\\s]+$/.test(value)) || 3 > value.length || 15 < value.length) {\n          return true;\n        }\n        return false;\n      case 'email':\n        if (null == value || !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(value)) {\n          return true;\n        }\n        return false;\n    }\n  }\n\n  canSubmit = () => {\n    const retVal = false;\n    \n  }\n  return (\n    <div className=\"userProfileForm\">\n      {\n        userInputFields.map((userInputField) => {\n          if ('date' === userInputField.type) {\n            return(\n              <div className=\"input\">\n                <div className=\"placeholder\">{userInputField.placeHolder}</div>\n                <div className=\"input\">\n                  <input type={userInputField.type} name={userInputField.name} min={userInputField.min} max={userInputField.max} value={userData.[userInputField.name]} onChange={setUserState} ></input>\n                </div>\n                <div className=\"errors\">{errors[userInputField.name] ? <span>incorrect</span> : <span></span>}</div>\n              </div>\n            )\n          } else if ('checkbox' == userInputField.type) {\n            return (\n              <div className=\"input\">\n                <div className=\"placeholder\">{userInputField.placeHolder}</div>\n                <div className=\"input\">\n                  <input className=\"checkbox\" type={userInputField.type} name={userInputField.name} defaultChecked={userData[userInputField.name]} onChange={setUserState} ></input>\n                </div>\n                <div className=\"errors\">{errors[userInputField.name] ? <span>please tick</span> : <span></span>}</div>\n              </div>\n            )\n          } else {\n            return (\n              <div className=\"input\">\n                <div className=\"placeholder\"><span>{userInputField.placeHolder}</span></div>\n                <div className=\"input\"><input type={userInputField.type} placeholder={userInputField.placeHolder} name={userInputField.name} value={userData.[userInputField.name]} onChange={setUserState}></input></div>\n                <div className=\"errors\">{errors[userInputField.name] ? <span>incorrect</span> : <span></span>}</div>\n              </div>\n            )\n          }\n        })\n      }\n      <input type=\"submit\" {canSubmit() ?: disabled} ></input>\n    </div>\n  )\n}\n\nexport default LoginTemplate;\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":null,"fatal":true,"severity":2,"message":"43","line":125,"column":29},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"Parsing error: Unexpected token, expected \"...\"\n\n  123 |         })\n  124 |       }\n> 125 |       <input type=\"submit\" {canSubmit() ?: disabled} ></input>\n      |                             ^\n  126 |     </div>\n  127 |   )\n  128 | }","no-global-assign","no-unsafe-negation"]